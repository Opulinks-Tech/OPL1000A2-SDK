/******************************************************************************/
/* RAM.INI: RAM Initialization File                                           */
/******************************************************************************/
/* This file is part of the uVision/ARM development tools.                    */
/* Copyright (c) 2009 Keil Software. All rights reserved.                     */
/* This software may only be used under the terms of a valid, current,        */
/* end user licence from KEIL for a compatible version of KEIL software       */
/* development tools. Nothing else gives you the right to use this software.  */
/******************************************************************************/

LOAD "..\\..\\..\\..\\APS\\Targets\\opl1000\\Output\\Objects\\opl1000_rom_m3.axf" NOCODE

FUNC void Setup (void) {
  _WDWORD(0x40001104, 0x0309FEFD);  // reset: TAP, security, JTAG2AHB, DMA, OTP, APS debug UART, UART1, UART0, SPI2, SPI1, SPI0, APS VIC, Watchdog, Timer1, Timer0, PWM, I2C, rfm

  // patch
  _WDWORD(0x3000E050, 0x00008000);  // original address Patch_EntryPoint
  _WDWORD(0x00400000, 0xB24EF00E);  // machine code
  _WDWORD(0x40001108, 0x00000800);  // reset m0 MCU
  
    
  /* M3 ipatch 127.
    * Only for Keil load code use. Skip Boot_CheckUartBehavior, jump to Boot_BeforeApplyPatch */
  _WDWORD(0x3000E24C, 0x00001614);  // boot_sequence.c:696 @0x1614
  _WDWORD(0x004001FC, 0x0000E00C);  // Jump to line 703 @0x1630    


  _WDWORD(0x3000E250, 0x00400000);  // the start address of machine code
  _WDWORD(0x3000E254, 0x00000001);  // enable the bit 0
  _WDWORD(0x3000E258, 0x00000000);  // disable
  _WDWORD(0x3000E25C, 0x00000000);  // disable
  _WDWORD(0x3000E260, 0x80000000);  // enable ipatch 127
  // remap
  _WDWORD(0x3000E4D4, 0x00000000);  // disable
  _WDWORD(0x3000E4D8, 0x00000000);  // disable
  _WDWORD(0x3000E4DC, 0x00000000);  // disable
  _WDWORD(0x3000E4E0, 0x00000000);  // disable


}

FUNC void OnResetExec (void)  {      // executes upon software RESET
  Setup();                           // Setup for Running
}

LOAD %L INCREMENTAL
reset
Setup();  // Get ready to execute image in SRAM or whatever region it is in
g, main